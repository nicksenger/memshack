apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mcrouter-operator
rules:
- apiGroups:
  - ''
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - apps
  resourceNames:
  - mcrouter-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - memcached.example.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - mcrouter.example.com
  resources:
  - '*'
  - mcrouters
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mcrouter-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mcrouter-operator
subjects:
- kind: ServiceAccount
  name: mcrouter-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcrouter-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcrouter-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mcrouter-operator
  template:
    metadata:
      name: mcrouter-operator
    spec:
      containers:
      - image: mcrouter-operator:latest
        imagePullPolicy: Never
        name: operator
        ports:
        - containerPort: 3000
          name: https
          protocol: TCP
      serviceAccountName: mcrouter-operator
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mcrouters.example.com
spec:
  group: example.com
  names:
    categories: []
    kind: Mcrouter
    plural: mcrouters
    shortNames: []
    singular: mcrouter
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for McrouterSpec via `CustomResource`
        properties:
          spec:
            properties:
              mcrouter_image:
                default: mcrouter/mcrouter
                type: string
              mcrouter_port:
                default: 5000
                format: uint
                minimum: 0.0
                type: integer
              memcached_image:
                default: memcached:1.6-alpine
                type: string
              memcached_pool_size:
                default: 3
                format: uint
                minimum: 0.0
                type: integer
              memcached_port:
                default: 11211
                format: uint
                minimum: 0.0
                type: integer
              pool_setup:
                default: replicated
                enum:
                - replicated
                - sharded
                type: string
            type: object
          status:
            nullable: true
            properties:
              pods:
                items:
                  type: string
                type: array
            required:
            - pods
            type: object
        required:
        - spec
        title: Mcrouter
        type: object
    served: true
    storage: true
    subresources:
      status: {}
